apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'maven'
apply plugin: 'idea'

group = 'kz.greetgo'

sourceCompatibility = 1.8
version = '2.0.0'

def nowDate = new Date()
def nowFormattedDate = nowDate.format("yyyy-MM-dd/HH:mm:ss")

jar {
  manifest {
    attributes 'Implementation-Title': project.name
    attributes 'Implementation-Version': version
    attributes 'Implementation-Vendor': 'greetgo!'
    attributes 'Built-By': System.getProperty("user.name")
    attributes 'Built-At': nowFormattedDate
  }
}

eclipse.project.natures 'org.springsource.ide.eclipse.gradle.core.nature'

compileJava.options.encoding = 'UTF-8'
compileTestJava.options.encoding = 'UTF-8'

sourceSets.main.java.srcDirs = ["src"]
sourceSets.main.resources.srcDirs = ["src", "src_resources"]
sourceSets.test.java.srcDirs = ["test_src"]
sourceSets.test.resources.srcDirs = ["test_src", "test_resources"]

eclipse {
  jdt {
    //
    // if you want to alter the java versions (by default they are configured with
    // gradle java plugin settings):
    //
    sourceCompatibility = 1.8
    targetCompatibility = 1.8
  }
}

project.eclipse.classpath.file.whenMerged { cp ->
  if (project.hasProperty("sourceCompatibility")) {
    cp.entries.findAll { it.path.contains('JRE_CONTAINER') }.each {

      it.path += "/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/" +
        "JavaSE-$project.sourceCompatibility"
    }
  }
}

repositories {
  maven { url System.getenv('GG_REPO') }
}

dependencies {
  //compile 'org.slf4j:log4j-over-slf4j:1.7.5'
  compile 'kz.greetgo:greetgo.util:0.0.6'

  compile 'com.google.code.findbugs:annotations:2.0.1'

  testCompile group: 'org.postgresql', name: 'postgresql', version: '9.4-1202-jdbc42'

  testCompile 'org.testng:testng:6.5.1'
  testCompile 'org.easytesting:fest-assert-core:2.0M10'

  testCompile 'postgresql:postgresql:9.1-901.jdbc4'
  testCompile 'c3p0:c3p0:0.9.1.2'

  testCompile "greetgo.3rd-party:oracle-ojdbc6_g:11.2.0.3"
  testCompile "greetgo.3rd-party:oracle-ucp:11.2.0.3"

  testCompile 'kz.greetgo:greetgo.test.db_providers:0.0.6'
}

test { useTestNG() }

task javadocJar(type: Jar, dependsOn: 'javadoc') {
  from javadoc.destinationDir
  classifier = 'javadoc'
}

task sourcesJar(type: Jar) {
  from sourceSets.main.allSource
  classifier = 'sources'
}

artifacts {
  archives javadocJar
  archives sourcesJar
}

uploadArchives {
  repositories.mavenDeployer {
    configuration = configurations.archives
    repository(
      url: System.getenv('GG_REPO')
    )

    pom.project {
      name project.name
      packaging 'jar'
    }
  }
}
